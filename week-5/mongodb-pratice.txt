Last login: Wed May  8 08:18:38 on ttys001
➜ ~ % brew services start mongodb-community 
==> Successfully started `mongodb-community` (label: homebrew.mxcl.mongodb-commu
➜ ~ % mongosh
Current Mongosh Log ID:	663ae238a4910f6d94d97642
Connecting to:		mongodb://127.0.0.1:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+2.2.5
Using MongoDB:		7.0.8
Using Mongosh:		2.2.5

For mongosh info see: https://docs.mongodb.com/mongodb-shell/

------
   The server generated these startup warnings when booting
   2024-05-08T09:16:41.673+07:00: Access control is not enabled for the database. Read and write access to data and configuration is unrestricted
------

test> use mongo_pratice
switched to db mongo_pratice

mongo_pratice> db.movies.insertMany([
... {
...     "title": "Fight Club",
...     "writer": "Chuck Palahniuk",
...     "year": 1999,
...     "actors": ["Brad Pitt", "Edward Norton"]
...   },
...   {
...     "title": "Pulp Fiction",
...     "writer": "Quentin Tarantino",
...     "year": 1994,
...     "actors": ["John Travolta", "Uma Thurman"]
...   },
...   {
...     "title": "Inglorious Basterds",
...     "writer": "Quentin Tarantino",
...     "year": 2009,
...     "actors": ["Brad Pitt", "Diane Kruger", "Eli Roth"]
...   },
...   {
...     "title": "The Hobbit: An Unexpected Journey",
...     "writer": "J.R.R. Tolkein",
...     "year": 2012,
...     "franchise": "The Hobbit"
...   },
...   {
...     "title": "The Hobbit: The Desolation of Smaug",
...     "writer": "J.R.R. Tolkein",
...     "year": 2013,
...     "franchise": "The Hobbit"
...   },
...   {
...     "title": "The Hobbit: The Battle of the Five Armies",
...     "writer": "J.R.R. Tolkein",
...     "year": 2012,
...     "franchise": "The Hobbit",
...     "synopsis": "Bilbo and Company are forced to engage in a war against an array of combatants and keep the Lonely Mountain from falling into the hands of a rising darkness."
...   },
...   {
...     "title": "Pee Wee Herman's Big Adventure"
...   },
...   {
...     "title": "Avatar"
...   }
... ]);
{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId('663ae151a492f96d94d99271'),
    '1': ObjectId('663ae151a492f96d94d99272'),
    '2': ObjectId('663ae151a492f96d94d99273'),
    '3': ObjectId('663ae151a492f96d94d99274'),
    '4': ObjectId('663ae151a492f96d94d99275'),
    '5': ObjectId('663ae151a492f96d94d99276'),
    '6': ObjectId('663ae151a492f96d94d99277'),
    '7': ObjectId('663ae151a492f96d94d99278')
  }
}
mongo_pratice> show databases
admin          144.00 KiB
config          84.00 KiB
local           72.00 KiB
mongo_pratice    8.00 KiB
mongo_pratice> show tables
movies

mongo_pratice> db.movies.find()
[
  {
    _id: ObjectId('663ae151a492f96d94d99271'),
    title: 'Fight Club',
    writer: 'Chuck Palahniuk',
    year: 1999,
    actors: [ 'Brad Pitt', 'Edward Norton' ]
  },
  {
    _id: ObjectId('663ae151a492f96d94d99272'),
    title: 'Pulp Fiction',
    writer: 'Quentin Tarantino',
    year: 1994,
    actors: [ 'John Travolta', 'Uma Thurman' ]
  },
  {
    _id: ObjectId('663ae151a492f96d94d99273'),
    title: 'Inglorious Basterds',
    writer: 'Quentin Tarantino',
    year: 2009,
    actors: [ 'Brad Pitt', 'Diane Kruger', 'Eli Roth' ]
  },
  {
    _id: ObjectId('663ae151a492f96d94d99274'),
    title: 'The Hobbit: An Unexpected Journey',
    writer: 'J.R.R. Tolkein',
    year: 2012,
    franchise: 'The Hobbit'
  },
  {
    _id: ObjectId('663ae151a492f96d94d99275'),
    title: 'The Hobbit: The Desolation of Smaug',
    writer: 'J.R.R. Tolkein',
    year: 2013,
    franchise: 'The Hobbit'
  },
  {
    _id: ObjectId('663ae151a492f96d94d99276'),
    title: 'The Hobbit: The Battle of the Five Armies',
    writer: 'J.R.R. Tolkein',
    year: 2012,
    franchise: 'The Hobbit',
    synopsis: 'Bilbo and Company are forced to engage in a war against an array of combatants and keep the Lonely Mountain from falling into the hands of a rising darkness.'
  },
  {
    _id: ObjectId('663ae151a492f96d94d99277'),
    title: "Pee Wee Herman's Big Adventure"
  },
  { _id: ObjectId('663ae151a492f96d94d99278'), title: 'Avatar' }
]
mongo_pratice> db.movies.find({ writer: "Quentin Tarantino" })
[
  {
    _id: ObjectId('663ae151a492f96d94d99272'),
    title: 'Pulp Fiction',
    writer: 'Quentin Tarantino',
    year: 1994,
    actors: [ 'John Travolta', 'Uma Thurman' ]
  },
  {
    _id: ObjectId('663ae151a492f96d94d99273'),
    title: 'Inglorious Basterds',
    writer: 'Quentin Tarantino',
    year: 2009,
    actors: [ 'Brad Pitt', 'Diane Kruger', 'Eli Roth' ]
  }
]
mongo_pratice> db.movies.find({ actors: 'Brad Pitt' })
[
  {
    _id: ObjectId('663ae151a492f96d94d99271'),
    title: 'Fight Club',
    writer: 'Chuck Palahniuk',
    year: 1999,
    actors: [ 'Brad Pitt', 'Edward Norton' ]
  },
  {
    _id: ObjectId('663ae151a492f96d94d99273'),
    title: 'Inglorious Basterds',
    writer: 'Quentin Tarantino',
    year: 2009,
    actors: [ 'Brad Pitt', 'Diane Kruger', 'Eli Roth' ]
  }
]

mongo_pratice> db.movies.find({ franchise: 'The Hobbit' })
[
  {
    _id: ObjectId('663ae151a492f96d94d99274'),
    title: 'The Hobbit: An Unexpected Journey',
    writer: 'J.R.R. Tolkein',
    year: 2012,
    franchise: 'The Hobbit'
  },
  {
    _id: ObjectId('663ae151a492f96d94d99275'),
    title: 'The Hobbit: The Desolation of Smaug',
    writer: 'J.R.R. Tolkein',
    year: 2013,
    franchise: 'The Hobbit'
  },
  {
    _id: ObjectId('663ae151a492f96d94d99276'),
    title: 'The Hobbit: The Battle of the Five Armies',
    writer: 'J.R.R. Tolkein',
    year: 2012,
    franchise: 'The Hobbit',
    synopsis: 'Bilbo and Company are forced to engage in a war against an array of combatants and keep the Lonely Mountain from falling into the hands of a rising darkness.'
  }
]
mongo_pratice> db.movies.find({ year: {$gte: 1990, $lt: 2000 } })
[
  {
    _id: ObjectId('663ae151a492f96d94d99271'),
    title: 'Fight Club',
    writer: 'Chuck Palahniuk',
    year: 1999,
    actors: [ 'Brad Pitt', 'Edward Norton' ]
  },
  {
    _id: ObjectId('663ae151a492f96d94d99272'),
    title: 'Pulp Fiction',
    writer: 'Quentin Tarantino',
    year: 1994,
    actors: [ 'John Travolta', 'Uma Thurman' ]
  }
]
mongo_pratice> db.movies.find({ $or: [{ year: { $lt: 2000 } }, { year: { $gt: 2010 } }] })
[
  {
    _id: ObjectId('663ae151a492f96d94d99271'),
    title: 'Fight Club',
    writer: 'Chuck Palahniuk',
    year: 1999,
    actors: [ 'Brad Pitt', 'Edward Norton' ]
  },
  {
    _id: ObjectId('663ae151a492f96d94d99272'),
    title: 'Pulp Fiction',
    writer: 'Quentin Tarantino',
    year: 1994,
    actors: [ 'John Travolta', 'Uma Thurman' ]
  },
  {
    _id: ObjectId('663ae151a492f96d94d99274'),
    title: 'The Hobbit: An Unexpected Journey',
    writer: 'J.R.R. Tolkein',
    year: 2012,
    franchise: 'The Hobbit'
  },
  {
    _id: ObjectId('663ae151a492f96d94d99275'),
    title: 'The Hobbit: The Desolation of Smaug',
    writer: 'J.R.R. Tolkein',
    year: 2013,
    franchise: 'The Hobbit'
  },
  {
    _id: ObjectId('663ae151a492f96d94d99276'),
    title: 'The Hobbit: The Battle of the Five Armies',
    writer: 'J.R.R. Tolkein',
    year: 2012,
    franchise: 'The Hobbit',
    synopsis: 'Bilbo and Company are forced to engage in a war against an array of combatants and keep the Lonely Mountain from falling into the hands of a rising darkness.'
  }
]

mongo_pratice> db.movies.updateOne( { title: "The Hobbit: An Unexpected Journey" }, { $set: { synopsis: "A reluctant hobbit, Bilbo Baggins, sets out to the Lonely Mountain with a spirited group of dwarves to reclaim their mountain home - and the gold within it - from the dragon Smaug." }, } )
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}
mongo_pratice> db.movies.find({ title: "The Hobbit: An Unexpected Journey" })
[
  {
    _id: ObjectId('663ae151a492f96d94d99274'),
    title: 'The Hobbit: An Unexpected Journey',
    writer: 'J.R.R. Tolkein',
    year: 2012,
    franchise: 'The Hobbit',
    synopsis: 'A reluctant hobbit, Bilbo Baggins, sets out to the Lonely Mountain with a spirited group of dwarves to reclaim their mountain home - and the gold within it - from the dragon Smaug.'
  }
]

mongo_pratice> db.movies.updateOne( { title: "The Hobbit: The Desolation of Smaug" }, { $set: { synopsis: "The dwarves, along with Bilbo Baggins and Gandalf the Grey, continue their quest to reclaim Erebor, their homeland, from Smaug. Bilbo Baggins is in possession of a mysterious and magical ring." }, } )
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}
mongo_pratice> db.movies.find({ title: "The Hobbit: The Desolation of Smaug" })
[
  {
    _id: ObjectId('663ae151a492f96d94d99275'),
    title: 'The Hobbit: The Desolation of Smaug',
    writer: 'J.R.R. Tolkein',
    year: 2013,
    franchise: 'The Hobbit',
    synopsis: 'The dwarves, along with Bilbo Baggins and Gandalf the Grey, continue their quest to reclaim Erebor, their homeland, from Smaug. Bilbo Baggins is in possession of a mysterious and magical ring.'
  }
]
mongo_pratice> db.movies.updateOne( { movie: "Pulp Fiction" }, { $addToSet: { actors: "Samuel L. Jackson" } } )
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 0,
  modifiedCount: 0,
  upsertedCount: 0
}
mongo_pratice> db.movies.updateOne( { title: "The Hobbit: The Desolation of Smaug" }, { $set: { synopsis: "The dwarves, along with Bilbo Baggins and Gandalf the Grey, continue their quest to reclaim Erebor, their homeland, from Smaug. Bilbo Baggins is in possession of a mysterious and magical ring." }, } )
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 0,
  upsertedCount: 0
}
mongo_pratice> db.movies.find({ title: "The Hobbit: The Desolation of Smaug" })
[
  {
    _id: ObjectId('663ae151a492f96d94d99275'),
    title: 'The Hobbit: The Desolation of Smaug',
    writer: 'J.R.R. Tolkein',
    year: 2013,
    franchise: 'The Hobbit',
    synopsis: 'The dwarves, along with Bilbo Baggins and Gandalf the Grey, continue their quest to reclaim Erebor, their homeland, from Smaug. Bilbo Baggins is in possession of a mysterious and magical ring.'
  }
]
mongo_pratice> db.movies.updateOne( { title: "Pulp Fiction" }, { $addToSet: { actors: "Samuel L. Jackson" } } )
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}
mongo_pratice> db.movies.find({ title: "Pulp Fiction" })
[
  {
    _id: ObjectId('663ae151a492f96d94d99272'),
    title: 'Pulp Fiction',
    writer: 'Quentin Tarantino',
    year: 1994,
    actors: [ 'John Travolta', 'Uma Thurman', 'Samuel L. Jackson' ]
  }
]

mongo_pratice> db.movies.createIndex({ synopsis: "text" })
synopsis_text
mongo_pratice> db.movies.find({ $text: { $search: "Bilbo" } })
[
  {
    _id: ObjectId('663ae151a492f96d94d99275'),
    title: 'The Hobbit: The Desolation of Smaug',
    writer: 'J.R.R. Tolkein',
    year: 2013,
    franchise: 'The Hobbit',
    synopsis: 'The dwarves, along with Bilbo Baggins and Gandalf the Grey, continue their quest to reclaim Erebor, their homeland, from Smaug. Bilbo Baggins is in possession of a mysterious and magical ring.'
  },
  {
    _id: ObjectId('663ae151a492f96d94d99276'),
    title: 'The Hobbit: The Battle of the Five Armies',
    writer: 'J.R.R. Tolkein',
    year: 2012,
    franchise: 'The Hobbit',
    synopsis: 'Bilbo and Company are forced to engage in a war against an array of combatants and keep the Lonely Mountain from falling into the hands of a rising darkness.'
  },
  {
    _id: ObjectId('663ae151a492f96d94d99274'),
    title: 'The Hobbit: An Unexpected Journey',
    writer: 'J.R.R. Tolkein',
    year: 2012,
    franchise: 'The Hobbit',
    synopsis: 'A reluctant hobbit, Bilbo Baggins, sets out to the Lonely Mountain with a spirited group of dwarves to reclaim their mountain home - and the gold within it - from the dragon Smaug.'
  }
]
mongo_pratice> db.movies.find({ $text: { $search: "Gandalf" } })
[
  {
    _id: ObjectId('663ae151a492f96d94d99275'),
    title: 'The Hobbit: The Desolation of Smaug',
    writer: 'J.R.R. Tolkein',
    year: 2013,
    franchise: 'The Hobbit',
    synopsis: 'The dwarves, along with Bilbo Baggins and Gandalf the Grey, continue their quest to reclaim Erebor, their homeland, from Smaug. Bilbo Baggins is in possession of a mysterious and magical ring.'
  }
]
mongo_pratice> db.movies.find({ $text: { $search: 
... "Bilbo -Gandalf" } } )
[
  {
    _id: ObjectId('663ae151a492f96d94d99276'),
    title: 'The Hobbit: The Battle of the Five Armies',
    writer: 'J.R.R. Tolkein',
    year: 2012,
    franchise: 'The Hobbit',
    synopsis: 'Bilbo and Company are forced to engage in a war against an array of combatants and keep the Lonely Mountain from falling into the hands of a rising darkness.'
  },
  {
    _id: ObjectId('663ae151a492f96d94d99274'),
    title: 'The Hobbit: An Unexpected Journey',
    writer: 'J.R.R. Tolkein',
    year: 2012,
    franchise: 'The Hobbit',
    synopsis: 'A reluctant hobbit, Bilbo Baggins, sets out to the Lonely Mountain with a spirited group of dwarves to reclaim their mountain home - and the gold within it - from the dragon Smaug.'
  }
]
mongo_pratice> db.movies.find({ $text: { $search: "dwarves hobbit" } })
[
  {
    _id: ObjectId('663ae151a492f96d94d99274'),
    title: 'The Hobbit: An Unexpected Journey',
    writer: 'J.R.R. Tolkein',
    year: 2012,
    franchise: 'The Hobbit',
    synopsis: 'A reluctant hobbit, Bilbo Baggins, sets out to the Lonely Mountain with a spirited group of dwarves to reclaim their mountain home - and the gold within it - from the dragon Smaug.'
  },
  {
    _id: ObjectId('663ae151a492f96d94d99275'),
    title: 'The Hobbit: The Desolation of Smaug',
    writer: 'J.R.R. Tolkein',
    year: 2013,
    franchise: 'The Hobbit',
    synopsis: 'The dwarves, along with Bilbo Baggins and Gandalf the Grey, continue their quest to reclaim Erebor, their homeland, from Smaug. Bilbo Baggins is in possession of a mysterious and magical ring.'
  }
]
mongo_pratice> db.movies.find({ $text: { $search: "gold dragon" } } )
[
  {
    _id: ObjectId('663ae151a492f96d94d99274'),
    title: 'The Hobbit: An Unexpected Journey',
    writer: 'J.R.R. Tolkein',
    year: 2012,
    franchise: 'The Hobbit',
    synopsis: 'A reluctant hobbit, Bilbo Baggins, sets out to the Lonely Mountain with a spirited group of dwarves to reclaim their mountain home - and the gold within it - from the dragon Smaug.'
  }
]

mongo_pratice> db.movies.deleteOne({ title: "Pee Wee Herman's Big Adventure" })
{ acknowledged: true, deletedCount: 1 }

mongo_pratice> db.movies.deleteOne({ title: "Avatar" })
{ acknowledged: true, deletedCount: 1 }
mongo_pratice> db.movies.find()
[
  {
    _id: ObjectId('663ae151a492f96d94d99271'),
    title: 'Fight Club',
    writer: 'Chuck Palahniuk',
    year: 1999,
    actors: [ 'Brad Pitt', 'Edward Norton' ]
  },
  {
    _id: ObjectId('663ae151a492f96d94d99272'),
    title: 'Pulp Fiction',
    writer: 'Quentin Tarantino',
    year: 1994,
    actors: [ 'John Travolta', 'Uma Thurman', 'Samuel L. Jackson' ]
  },
  {
    _id: ObjectId('663ae151a492f96d94d99273'),
    title: 'Inglorious Basterds',
    writer: 'Quentin Tarantino',
    year: 2009,
    actors: [ 'Brad Pitt', 'Diane Kruger', 'Eli Roth' ]
  },
  {
    _id: ObjectId('663ae151a492f96d94d99274'),
    title: 'The Hobbit: An Unexpected Journey',
    writer: 'J.R.R. Tolkein',
    year: 2012,
    franchise: 'The Hobbit',
    synopsis: 'A reluctant hobbit, Bilbo Baggins, sets out to the Lonely Mountain with a spirited group of dwarves to reclaim their mountain home - and the gold within it - from the dragon Smaug.'
  },
  {
    _id: ObjectId('663ae151a492f96d94d99275'),
    title: 'The Hobbit: The Desolation of Smaug',
    writer: 'J.R.R. Tolkein',
    year: 2013,
    franchise: 'The Hobbit',
    synopsis: 'The dwarves, along with Bilbo Baggins and Gandalf the Grey, continue their quest to reclaim Erebor, their homeland, from Smaug. Bilbo Baggins is in possession of a mysterious and magical ring.'
  },
  {
    _id: ObjectId('663ae151a492f96d94d99276'),
    title: 'The Hobbit: The Battle of the Five Armies',
    writer: 'J.R.R. Tolkein',
    year: 2012,
    franchise: 'The Hobbit',
    synopsis: 'Bilbo and Company are forced to engage in a war against an array of combatants and keep the Lonely Mountain from falling into the hands of a rising darkness.'
  }
]
mongo_pratice> show collections
movies

mongo_pratice> db.comments.insertMany([ { username: "GoodGuyGreg", comment: "Hope you got a good deal!", post: db.posts.findOne({ title: "Borrows something" })._id }, { username: "GoodGuyGreg", comment: "What's mine is yours!", post: db.posts.findOne({ title: "Borrows everything" })._id }, { username: "GoodGuyGreg", comment: "Don't violate the licensing agreement!", post: db.posts.findOne({ title: "Forks your repo on github" })._id }, { username: "ScumbagSteve", comment: "It still isn't clean", post: db.posts.findOne({ title: "Passes out at party" })._id }, { username: "ScumbagSteve", comment: "Denied your PR cause I found a hack", post: db.posts.findOne({ title: "Reports a bug in your code" })._id }] )
{
  acknowledged: true,
  insertedIds: {
    '0': ObjectId('663b58ef5044bd7bb52e0672'),
    '1': ObjectId('663b58ef5044bd7bb52e0673'),
    '2': ObjectId('663b58ef5044bd7bb52e0674'),
    '3': ObjectId('663b58ef5044bd7bb52e0675'),
    '4': ObjectId('663b58ef5044bd7bb52e0676')
  }
}

mongo_pratice> db.comments.find()
[
  {
    _id: ObjectId('663b58ef5044bd7bb52e0672'),
    username: 'GoodGuyGreg',
    comment: 'Hope you got a good deal!',
    post: ObjectId('663b56a55044bd7bb52e066f')
  },
  {
    _id: ObjectId('663b58ef5044bd7bb52e0673'),
    username: 'GoodGuyGreg',
    comment: "What's mine is yours!",
    post: ObjectId('663b56a55044bd7bb52e0670')
  },
  {
    _id: ObjectId('663b58ef5044bd7bb52e0674'),
    username: 'GoodGuyGreg',
    comment: "Don't violate the licensing agreement!",
    post: ObjectId('663b56a55044bd7bb52e0671')
  },
  {
    _id: ObjectId('663b58ef5044bd7bb52e0675'),
    username: 'ScumbagSteve',
    comment: "It still isn't clean",
    post: ObjectId('663b56a55044bd7bb52e066c')
  },
  {
    _id: ObjectId('663b58ef5044bd7bb52e0676'),
    username: 'ScumbagSteve',
    comment: 'Denied your PR cause I found a hack',
    post: ObjectId('663b56a55044bd7bb52e066e')
  }
]
mongo_pratice> db.users.find()
[
  {
    _id: ObjectId('663b56565044bd7bb52e066a'),
    username: 'GoodGuyGreg',
    first_name: 'Good Guy',
    last_name: 'Greg'
  },
  {
    _id: ObjectId('663b56565044bd7bb52e066b'),
    username: 'ScumbagSteve',
    full_name: { first: 'Scumbag', last: 'Steve' }
  }
]
mongo_pratice> db.posts.find()
[
  {
    _id: ObjectId('663b56a55044bd7bb52e066c'),
    username: 'GoodGuyGreg',
    title: 'Passes out at party',
    body: 'Wakes up early and cleans house'
  },
  {
    _id: ObjectId('663b56a55044bd7bb52e066d'),
    username: 'GoodGuyGreg',
    title: 'Steals your identity',
    body: 'Raises your credit score'
  },
  {
    _id: ObjectId('663b56a55044bd7bb52e066e'),
    username: 'GoodGuyGreg',
    title: 'Reports a bug in your code',
    body: 'Sends you a Pull Request'
  },
  {
    _id: ObjectId('663b56a55044bd7bb52e066f'),
    username: 'ScumbagSteve',
    title: 'Borrows something',
    body: 'Sells it'
  },
  {
    _id: ObjectId('663b56a55044bd7bb52e0670'),
    username: 'ScumbagSteve',
    title: 'Borrows everything',
    body: 'The end'
  },
  {
    _id: ObjectId('663b56a55044bd7bb52e0671'),
    username: 'ScumbagSteve',
    title: 'Forks your repo on github',
    body: 'Sets to private'
  }
]
mongo_pratice> db.posts.find({ username: "GoodGuyGreg" })
[
  {
    _id: ObjectId('663b56a55044bd7bb52e066c'),
    username: 'GoodGuyGreg',
    title: 'Passes out at party',
    body: 'Wakes up early and cleans house'
  },
  {
    _id: ObjectId('663b56a55044bd7bb52e066d'),
    username: 'GoodGuyGreg',
    title: 'Steals your identity',
    body: 'Raises your credit score'
  },
  {
    _id: ObjectId('663b56a55044bd7bb52e066e'),
    username: 'GoodGuyGreg',
    title: 'Reports a bug in your code',
    body: 'Sends you a Pull Request'
  }
]
mongo_pratice> db.posts.find({ username: "ScumbagSteve" })
[
  {
    _id: ObjectId('663b56a55044bd7bb52e066f'),
    username: 'ScumbagSteve',
    title: 'Borrows something',
    body: 'Sells it'
  },
  {
    _id: ObjectId('663b56a55044bd7bb52e0670'),
    username: 'ScumbagSteve',
    title: 'Borrows everything',
    body: 'The end'
  },
  {
    _id: ObjectId('663b56a55044bd7bb52e0671'),
    username: 'ScumbagSteve',
    title: 'Forks your repo on github',
    body: 'Sets to private'
  }
]

mongo_pratice> db.comments.find()
[
  {
    _id: ObjectId('663b58ef5044bd7bb52e0672'),
    username: 'GoodGuyGreg',
    comment: 'Hope you got a good deal!',
    post: ObjectId('663b56a55044bd7bb52e066f')
  },
  {
    _id: ObjectId('663b58ef5044bd7bb52e0673'),
    username: 'GoodGuyGreg',
    comment: "What's mine is yours!",
    post: ObjectId('663b56a55044bd7bb52e0670')
  },
  {
    _id: ObjectId('663b58ef5044bd7bb52e0674'),
    username: 'GoodGuyGreg',
    comment: "Don't violate the licensing agreement!",
    post: ObjectId('663b56a55044bd7bb52e0671')
  },
  {
    _id: ObjectId('663b58ef5044bd7bb52e0675'),
    username: 'ScumbagSteve',
    comment: "It still isn't clean",
    post: ObjectId('663b56a55044bd7bb52e066c')
  },
  {
    _id: ObjectId('663b58ef5044bd7bb52e0676'),
    username: 'ScumbagSteve',
    comment: 'Denied your PR cause I found a hack',
    post: ObjectId('663b56a55044bd7bb52e066e')
  }
]
mongo_pratice> db.comments.find({ username: "GoodGuyGreg" })
[
  {
    _id: ObjectId('663b58ef5044bd7bb52e0672'),
    username: 'GoodGuyGreg',
    comment: 'Hope you got a good deal!',
    post: ObjectId('663b56a55044bd7bb52e066f')
  },
  {
    _id: ObjectId('663b58ef5044bd7bb52e0673'),
    username: 'GoodGuyGreg',
    comment: "What's mine is yours!",
    post: ObjectId('663b56a55044bd7bb52e0670')
  },
  {
    _id: ObjectId('663b58ef5044bd7bb52e0674'),
    username: 'GoodGuyGreg',
    comment: "Don't violate the licensing agreement!",
    post: ObjectId('663b56a55044bd7bb52e0671')
  }
]
mongo_pratice> db.comments.find({ username: "ScumbagSteve" })
[
  {
    _id: ObjectId('663b58ef5044bd7bb52e0675'),
    username: 'ScumbagSteve',
    comment: "It still isn't clean",
    post: ObjectId('663b56a55044bd7bb52e066c')
  },
  {
    _id: ObjectId('663b58ef5044bd7bb52e0676'),
    username: 'ScumbagSteve',
    comment: 'Denied your PR cause I found a hack',
    post: ObjectId('663b56a55044bd7bb52e066e')
  }
]
mongo_pratice> db.comments.find({ post: db.posts.findOne({ title: "Reports a bug in your code" })._id })
[
  {
    _id: ObjectId('663b58ef5044bd7bb52e0676'),
    username: 'ScumbagSteve',
    comment: 'Denied your PR cause I found a hack',
    post: ObjectId('663b56a55044bd7bb52e066e')
  }
]
mongo_pratice> 
























